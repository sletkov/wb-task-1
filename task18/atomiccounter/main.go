package main

import (
	"fmt"
	"sync"
	"sync/atomic"
)

//Реализовать структуру-счетчик, которая будет инкрементироваться в конкурентной среде.
//По завершению программа должна выводить итоговое значение счетчика.

//Вариант с использованием пакета atomic

//Cоздадим структуру Counter
type Counter struct {
	count atomic.Int64 //воспользуемся пакетом atomic, которы позволяет производить атомарные операции
}

func main() {
	//Cоздадим WaitGroup
	var wg sync.WaitGroup
	//Инициализируем переменную c, хранящую ссылку на структуру Counter
	c := &Counter{}

	//В цикле запустим 10 горутин, которые конкуренто будут увеличивать значение счетчика
	for i := 0; i < 10; i++ {
		//Увеличим количество ожидаемых горутин на 1
		wg.Add(1)
		go func() {
			//В отложенном режиме уменьшим кол-во ожидаемых горутин
			defer wg.Done()
			//Увеличим счетчик на 1
			c.count.Add(1)
		}()
	}

	//Ждем пока отработают все горутины
	wg.Wait()

	//Выведем значение сounter
	fmt.Println(c.count.Load())
}
