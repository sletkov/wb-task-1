package main

import (
	"fmt"
	"math"
)

//Дана последовательность температурных колебаний: -25.4, -27.0 13.0, 19.0, 15.5, 24.5, -21.0, 32.5.
//Объединить данные значения в группы с шагом в 10 градусов.
//Последовательность в подмножноствах не важна.
//Пример: -20:{-25.0, -27.0, -21.0}, 10:{13.0, 19.0, 15.5}, 20: {24.5}, etc.

func main() {
	temps := []float64{-25.4, -27.0, 0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5}
	fmt.Println(groupTemperature(temps))
}

//Сгруппируем температуру, с помощью map
func groupTemperature(temps []float64) map[int][]float64 {
	//Создадим map, где ключом будет округленное значение температур, а значением слайс температур
	groups := make(map[int][]float64)

	//Пройдемся в цикле по последовательности температур и заполним map
	for _, temp := range temps {
		//Ключ - температура группировки
		var group int

		//Температуру группировки будем вычислять как число десятков * 10, соблюдая знак
		//Если температура больше 0, округляем в меньшую сторону
		if temp > 0 {
			group = int(math.Floor(temp/10)) * 10
		} else {
			//Если температура меньше или равна 0, округляем в большую сторону
			group = int(math.Ceil(temp/10)) * 10
		}

		//добавляем температуру в соответствующую группу
		groups[group] = append(groups[group], temp)
	}

	//возвращаем сгруппированные температуры в виде map
	return groups
}
