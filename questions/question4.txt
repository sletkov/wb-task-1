4.	Чем отличаются буферизированные и не буферизированные каналы?

По умолчанию каналы являются небуферизованными. После каждой операции
записи в открытый небуферизованный канал производящая запись горутина
делает паузу до тех пор, пока другая горутина не произведет чтение из этого
канала. И точно так же после каждой операции чтения из открытого небуферизованного канала производящая чтение горутина делает паузу до тех пор, пока
другая горутина не произведет запись в этот канал. Это означает, что для чтения
или записи в небуферизованный канал требуются как минимум две параллельно
работающие горутины

Создание небуферизованного канала:
ch := make(chan int)

Буферизованные каналы, в отличие от небуферезированных имеют буфер.
Буфер позволяет выполнить без блокировки некоторое ограниченное количество операций записи.
Если буфер заполнится еще до выполнения каких-либо операций чтения из канала, то
следующая операция записи в этот канал приостановит записывающую горутину
до тех пор, пока не будет произведено чтение из канала. К такой же блокировке,
как в случае записи в канал с заполненным буфером, приводит и попытка чтения
из канала с пустым буфером.
Чтобы создать буферизованный канал, нужно указать емкость буфера при
создании канала:
ch := make(chan int, 10)

Встроенные функции len и cap позволяют получить информацию о буферизованном канале. С помощью функции len можно узнать текущее количество
значений в буфере, с помощью функции cap — максимальный размер буфера,
или его «емкость». Емкость буфера нельзя изменить.
Если в len() или cap() аргументом передать небуферизованный канал, то мы получим 0, так как
размер буфера небуферезированного канала равен 0

После закрытия канала любые попытки произвести запись в канал или закрыть его снова приведут к панике. Однако, что интересно, попытки чтения из
закрытого канала всегда завершаются успехом. Если канал является буферизованным и в нем еще есть непрочитанные значения, то они будут возвращены
в последовательном порядке. Если канал является небуферизованным или буферизованным, но уже без каких-либо значений, то будет возвращено нулевое
значение для используемого каналом типа.

Буферизованные каналы следует использовать в том случае, когда вы знаете количество запущенных горутин и хотите ограничить количество
горутин, которые еще будут запущены, или хотите ограничить объем работы, стоящей в очереди на выполнение.

Буферизованные каналы отлично работают, когда нужно либо собрать данные
из некоторого набора запущенных горутин, либо ограничить конкурентное использование.
Их также можно использовать для управления объемом работы,
поставленной системой в очередь на выполнение, чтобы не допустить снижения
производительности и перегрузки ваших сервисов.
