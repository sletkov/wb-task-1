Что такое интерфейсы, как они применяются в Go?
Интерфейсы - это специальные типы, позволяющие описать необходимую логику работы структур, удовлетворяющих этому интерфейсу
Интерфейсы позволяют абстрагироваться от конкретных типов данных и писать более гибкий и расширяемый код.
Интерфейс содержит внутри себя сигнатуры методов
Чтобы удовлетворять интерфейсу, структура должна реализовать все методы интерфейса (duck typing),
при этом явно не указывается, что данная структура реализует какой-то интерфейс

Применение интерфейсов в Go может быть разнообразным. 
Например, в Go стандартной библиотеке много интерфейсов, которые используются для работы с файлами, сетью, HTTP-запросами и т.д. 
Различные библиотеки и фреймворки также используют интерфейсы для определения своих API.

Пример создания интерфейса
type MyInterface interface {
    Hello()
    PrintLine(line string)
    GetIdByName(name string) int
}

Интерфейсы нужны для реализации ООП полиморфизма (у методов с одной сигнатурой может быть разная реализации для каждой отдельной структуры)
Если в параметрах функции указан пустой интерфейс interface{}, ей можно передать любой тип в качестве аргумента